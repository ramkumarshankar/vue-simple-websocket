{"version":3,"file":"VueSimpleWebSocket.js","sources":["../src/WebSocketClient.js","../src/Main.js"],"sourcesContent":["export default class WebSocketClient {\n  constructor(url, options) {\n    console.log(url, options);\n    this.instance = null\n    this.url = url\n    this.options = options || this.defaultOptions()\n    if (this.options) {\n      this.reconnectEnabled = options.reconnectEnabled || false\n      if (this.reconnectEnabled) {\n        this.reconnectInterval = options.reconnectInterval\n      }\n    }\n    // These methods should be defined by components\n    this.onOpen = null\n    this.onMessage = null\n    this.onClose = null\n    this.onError = null\n  }\n\n  defaultOptions() {\n    return {\n      reconnectEnabled: false,\n      reconnectInterval: 0\n    }\n  }\n\n  connect() {\n    this.instance = new WebSocket(this.url)\n\n    // Socket event listeners\n    // Each event handler also calls the corresponding class method, which can be defined by the component\n    this.instance.onopen = () => {\n      if (typeof this.onOpen === 'function') {\n        this.onOpen()\n      }\n    }\n    this.instance.onmessage = (msg) => {\n      if (typeof this.onMessage === 'function') {\n        this.onMessage(msg)\n      }\n    }\n    this.instance.onclose = (evt) => {\n      if (typeof this.onClose === 'function') {\n        this.onClose(evt)\n      }\n      if (!evt.wasClean && this.reconnectEnabled) {\n        this.reconnect()\n      }\n    }\n    this.instance.onerror = (evt) => {\n      if (typeof this.onError === 'function') {\n        this.onError(evt)\n      }\n    }\n  }\n\n  reconnect() {\n    delete this.instance\n    setTimeout(() => {\n      this.connect()\n    }, this.reconnectInterval)\n  }\n\n  send(message) {\n    this.instance.send(message);\n  }\n\n  sendObj(data) {\n    this.instance.send(JSON.stringify(data))\n  }\n\n  removeListeners() {\n    this.onOpen = null\n    this.onMessage = null\n    this.onClose = null\n    this.onError = null\n  }\n}\n","import WebSocketClient from './WebSocketClient'\n\nexport default {\n  install: (app, connection, options) => {\n    const socketClient = new WebSocketClient(connection, options)\n    socketClient.connect()\n    app.config.globalProperties.$socketClient = socketClient\n  }\n}\n"],"names":["WebSocketClient","url","options","console","log","this","instance","defaultOptions","reconnectEnabled","reconnectInterval","onOpen","onMessage","onClose","onError","WebSocket","onopen","a","onmessage","msg","onclose","evt","wasClean","reconnect","onerror","setTimeout","connect","message","send","data","JSON","stringify","install","app","connection","socketClient","config","globalProperties","$socketClient"],"mappings":"uLAAqBA,aACnB,WAAYC,EAAKC,0GACfC,QAAQC,IAAIH,EAAKC,GACjBG,KAAKC,SAAW,KAChBD,KAAKJ,IAAMA,EACXI,KAAKH,QAAUA,GAAWG,KAAKE,iBAC3BF,KAAKH,UACPG,KAAKG,iBAAmBN,EAAQM,qBAC5BH,KAAKG,mBACPH,KAAKI,kBAAoBP,EAAQO,oBAIrCJ,KAAKK,OAAS,KACdL,KAAKM,UAAY,KACjBN,KAAKO,QAAU,KACfP,KAAKQ,QAAU,2DAIf,MAAO,CACLL,oBACAC,kBAAmB,gDAKrBJ,KAAKC,SAAW,IAAIQ,UAAUT,KAAKJ,KAInCI,KAAKC,SAASS,OAAS,WACM,mBAAhBC,EAAKN,QACdM,EAAKN,UAGTL,KAAKC,SAASW,UAAY,SAACC,GACK,mBAAnBF,EAAKL,WACdK,EAAKL,UAAUO,IAGnBb,KAAKC,SAASa,QAAU,SAACC,GACK,mBAAjBJ,EAAKJ,SACdI,EAAKJ,QAAQQ,IAEVA,EAAIC,UAAYL,EAAKR,kBACxBQ,EAAKM,aAGTjB,KAAKC,SAASiB,QAAU,SAACH,GACK,mBAAjBJ,EAAKH,SACdG,EAAKH,QAAQO,+DAMLd,SACZkB,YAAW,WACTR,EAAKS,YACJpB,KAAKI,gDAGLiB,GACHrB,KAAKC,SAASqB,KAAKD,mCAGbE,GACNvB,KAAKC,SAASqB,KAAKE,KAAKC,UAAUF,8CAIlCvB,KAAKK,OAAS,KACdL,KAAKM,UAAY,KACjBN,KAAKO,QAAU,KACfP,KAAKQ,QAAU,sDCzEJ,CACbkB,QAAS,SAACC,EAAKC,EAAY/B,GACzB,IAAMgC,EAAe,IAAIlC,EAAgBiC,EAAY/B,GACrDgC,EAAaT,UACbO,EAAIG,OAAOC,iBAAiBC,cAAgBH"}